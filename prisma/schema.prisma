// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id  String @id @default(auto()) @map("_id") @db.ObjectId
  name String?
  email String? @unique
  emailVerified DateTime?
  image String?
  hashedPassword String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  chatIds  String[] @db.ObjectId
  chats     Chat[] @relation(fields: [chatIds], references: [id])

  seenMsgIds  String[] @db.ObjectId
  seenMsgs    Message[] @relation("Seen", fields: [seenMsgIds], references: [id])

  accounts Account[]
  msgs Message[]
}

model Account {
  id  String @id @default(auto()) @map("_id") @db.ObjectId
  type String 
  provider String
  providerAccountId String
  refresh_token String? @db.String
  accesss_token String? @db.String
  expires_at Int?
  token_type String?
  scope String?
  id_token String? @db.String
  session_state String?

  userId String @db.ObjectId
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Chat {
  id  String @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now())
  lastMsgAt DateTime @default(now())
  name String?
  isGroup Boolean?

  msgIds String[]   @db.ObjectId
  msgs Message[]

  userIds String[] @db.ObjectId
  user User[] @relation(fields: [userIds], references: [id])
}

model Message {
  id  String @id @default(auto()) @map("_id") @db.ObjectId
  body String?
  image String?
  createdAt DateTime @default(now())

  seenIds String[] @db.ObjectId
  seen User[] @relation("Seen", fields: [seenIds], references: [id])

  chatId String @db.ObjectId
  chat Chat @relation(fields: [chatId], references: [id])

  senderId String @db.ObjectId
  sender User @relation(fields: [senderId], references: [id], onDelete: Cascade)
}
